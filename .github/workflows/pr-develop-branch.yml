name: Validate PR on develop branch

on:
  pull_request:
    types: [opened, synchronize]
    branches: [develop]
    paths:
      - "force-app/**"

jobs:
  validate-deployment-on-develop-org:
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - name: "Install node"
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      
      - name: "Install Salesforce CLI"
        run: |
          npm install @salesforce/cli --location=global
          nodeInstallPath=$(npm config get prefix)
          echo "$nodeInstallPath/bin" >> $GITHUB_PATH
          sf --version

      - name: "Installing sfdx git delta"
        run: |
          echo y | sf plugins install sfdx-git-delta
          sf plugins

      - name: "Checkout source code"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: "Populate auth file with SFDX_URL secret of integration org"
        shell: bash
        run: |
          echo ${{ secrets.SFDX_INTEGRATION_URL }} > ./SFDX_INTEGRATION_URL.txt

      - name: "Authenticate to Integration Org"
        run: sf org login sfdx-url -f ./SFDX_INTEGRATION_URL.txt -a integration -d

      - name: "Create delta packages"
        run: |
          mkdir changed-sources
          sf sgd source delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

      - name: "Check-only deploy delta changes"
        id: deploy
        run: |
          DEPLOY_RESULT=$(sf project deploy start \ 
          -d "changed-sources/force-app" 
          -l RunLocalTests \
          --dry-run \
          --json \
          --async)
          DEPLOYID=$(echo $DEPLOY_RESULT | jq '.result.id')
          DEPLOYURL=$(echo $DEPLOY_RESULT | jq '.result.deployUrl')
          echo "deploymentId=$DEPLOYID" >> $GITHUB_OUTPUT
          echo "deploymentURL=$DEPLOYURL" >> $GITHUB_OUTPUT

      - name: "Generate check run"
        env:
          GH_TOKEN: ${{ github.token }}
        id: checkrun
        run: |
          CHECKID=$(gh api -X POST -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -f name='Check Deployment' \
          -f head_sha='${{ github.event.pull_request.head.sha }}' \
          -f details_url='${{ steps.deploy.outputs.deploymentURL }}'
          -f external_id='${{ steps.deploy.outputs.deploymentId }}'
          --jq '.id' \
          /repos/${{ github.repository }}/check-runs)

          echo "checkId=$CHECKID" >> $GITHUB_OUTPUT

      - name: "Monitor deployment externally"
        env:
          MONITOR_REQUEST_FREQUENCY: 10,
        run: |
          sf data create record --sobject MonitorRequest__c \
          --values "ActionId__c='${{ steps.deploy.outputs.deploymentId }}' \
          ActionType='Deploy' \
          MonitorFrequency__c=${{ env.MONITOR_REQUEST_FREQUENCY }} \
          Provider__c='Github' \
          ParentId__c='${{ github.event.number }}' \
          SourceData__c='{/"checkRunId/": /"${{ steps.checkrun.outputs.checkId }}/", /"repo/": /"${{ github.repository }}/", /"eventType/": /"deploy-check/"}' \
          SourceId__c='${{ github.event.pull_request.head.sha }}'"
